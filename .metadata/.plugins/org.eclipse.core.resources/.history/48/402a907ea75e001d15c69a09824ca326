package com.people.bootcamp.service;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import java.util.Optional;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import com.people.bootcamp.repository.ContentRepository;
import com.people.bootcamp.repository.UserContentRepository;
import com.people.bootcamp.repository.model.ContentModel;
import com.people.bootcamp.repository.model.UserContentId;
import com.people.bootcamp.repository.model.UserContentModel;


public class ContentServiceTest {

	ContentRepository contentRepository = mock(ContentRepository.class);
	UserContentRepository userContentRepository = mock(UserContentRepository.class);
	ContentService contentService;
	
	@BeforeEach
	void init() {
		contentService = new ContentService(userContentRepository, contentRepository);
	}
	
	@Test
	void alterarParaConcluidoComConteudoDeId2PresenteNoRepositorio () {
		final Long ID = Long.valueOf(2); 
		when(contentRepository.findById(ID)).thenReturn(Optional.of(ContentModel.builder().id(ID).build()));
		
		Optional<ContentModel> contentModel = contentRepository.findById(ID);
		
		UserContentId content = new UserContentId(1L, contentModel.get().getId());
		
		UserContentModel contentTeste = new UserContentModel(content);
		
		assertTrue(contentModel.isPresent());
		assertEquals(contentTeste.getId(), ID);
		
	}
}
	