package extruturaComposta;

import java.util.ArrayList;
import java.util.Scanner;

public class Programa {
	private static Scanner scanner;

	public static ArrayList<Luta> lutasAgendadas = new ArrayList<Luta>();

	public static ArrayList<Lutador> arrayLutadores = new ArrayList<Lutador>();

	public static Juiz[] juizes = new Juiz[10];

	public static void main(String[] args) {
		scanner = new Scanner(System.in);
		// .useDelimiter("\n")

		Lutador prettyBoy = new Lutador("Pretty Boy", "França", 31, 1.75f, 68.9f, 11, 2, 1, 0);
		Lutador putscript = new Lutador("Putscript", "Brasil", 29, 1.68f, 57.8f, 14, 2, 3, 0);
		Lutador snapshadow = new Lutador("Snapshadow", "EUA", 35, 1.65f, 80.9f, 12, 2, 1, 0);
		Lutador deadCode = new Lutador("Dead Code", "Australia", 28, 1.93f, 81.6f, 13, 0, 2, 0);
		Lutador ufoCobol = new Lutador("UFOCobol", "Brasil", 37, 1.70f, 119.3f, 5, 4, 3, 0);
		Lutador nerdaart = new Lutador("Nerdaart", "EUA", 30, 1.81f, 105.7f, 12, 2, 4, 0);

		arrayLutadores.add(nerdaart);
		arrayLutadores.add(deadCode);
		arrayLutadores.add(prettyBoy);
		arrayLutadores.add(ufoCobol);
		arrayLutadores.add(snapshadow);
		arrayLutadores.add(putscript);

		juizes[0] = new Juiz("Juiz Reinaldo", "Japao", 55, 5, 5, 0);
		juizes[1] = new Juiz("Juiz Ramon Abatti", "China", 45, 8, 10, 0);

		int ler = 0;
		do {
			ler = gerarMenuPrincipal();

			switch (ler) {
			case 1:
				Lutador lutadorSelecionado = selecionarLutador(arrayLutadores);
				if (lutadorSelecionado != null) {
					lutadorSelecionado.status();
				}
				break;
			case 2:

				adicionarLutadores();
				break;
			case 3:
				agendarLutas(arrayLutadores);
				break;
			case 4:
				consultarAgendamentos();
				break;
			case 5:
				realizarLutas();
				break;
			}
		} while (ler != 6);

	}

	private static int gerarMenuPrincipal() {
		System.out.println("MENU PRINCIPAL");
		System.out.println("[1] Consultar dados dos lutadores");
		System.out.println("[2] Adicionar lutadores");
		System.out.println("[3] Agendar lutas");
		System.out.println("[4] Consultar agendamentos");
		System.out.println("[5] Realizar lutas");
		System.out.println("[6]- Sair");
		return scanner.nextInt();
	}

	public static void adicionarLutadores() {
		String nomeLut;
		String pais;
		int idade;
		float altura;
		float peso;

		System.out.println("Informe o nome do lutador: ");
		nomeLut = scanner.next();

		System.out.println("Informe o país do lutador: ");
		pais = scanner.next();

		System.out.println("Informe a idade do lutador: ");
		idade = scanner.nextInt();

		System.out.println("Informe a altura do lutador: ");
		altura = scanner.nextFloat();

		System.out.println("Informe o peso do lutador: ");
		peso = scanner.nextFloat();

		Lutador novoLutador = new Lutador(nomeLut, pais, idade, altura, peso, 0, 0, 0, 0);

		arrayLutadores.add(novoLutador);
	}

	public static void consultarAgendamentos() {
		// Luta seiLa;
		for (int i = 0; i < lutasAgendadas.size(); i++) {
			Luta luta = lutasAgendadas.get(i);
			System.out.println(luta.getDesafiante().getNome() + " X " + luta.getDesafiado().getNome());
		}

	}

	private static void listarLutadores(ArrayList<Lutador> lutador) {
		int i;
		for (i = 0; i < arrayLutadores.size(); i++) {
			System.out.println("[" + (i + 1) + "]" + lutador.get(i).getNome());
		}
		System.out.println("[" + (i + 1) + "] Sair");

	}

	private static void agendarLutas(ArrayList<Lutador> lutador) {
		System.out.println("Confira  agora as lutas já agendadas ! ");
		for (int i = 0; i < lutasAgendadas.size(); i++) {
			Luta lutaGuardada = lutasAgendadas.get(i);
			if (lutaGuardada != null) {
				System.out.println((i + 1) + "a luta");
				System.out.println("Desafiante : " + lutaGuardada.getDesafiante().getNome());
				System.out.println("Desafiado : " + lutaGuardada.getDesafiado().getNome());
			}
		}
		Lutador lutadorDesafiante, lutadorDesafiado;
		System.out.println("Bem-vindo ao agendamento de lutas!");
		System.out.println("Escolha o desafiante: ");
		lutadorDesafiante = selecionarLutador(lutador);
		if (lutadorDesafiante != null) {
			System.out.println("Escolha o desafiado: ");
			lutadorDesafiado = selecionarLutador(lutador);
			if (lutadorDesafiado != null) {
				for (int i = 0; i < juizes.length; i++) {
					if (juizes[i] != null) {
						System.out.println("Escolha um juiz: ");
						break;
					} else {
						System.out.println("A luta não foi marcada pois não temos juízes disponíveis");
						break;
					}
				}
				for (int a = 0; a < juizes.length; a++) {
					if (juizes[a] != null) {
						System.out.println("[" + (a + 1) + "]" + juizes[a].getNome());

					}
				}
				
			} else {
				System.out.println("A luta não foi marcada pois não possuimos o desafiado");
			}
			Luta lutaAgendada = new Luta(lutadorDesafiante, lutadorDesafiado);
			int resposta = scanner.nextInt();
			System.out.println("Juiz escolhido foi" + juizes[(resposta - 1)].getNome());
			lutaAgendada.marcarLuta();
		} else {
			System.out.println("A luta não foi marcada pois não temos um desafiante");
		}

	}

	private static void escolherJuiz() {

		for (int i = 0; i < juizes.length; i++) {
			if (juizes[i] != null) {
				System.out.println("[" + (i + 1) + "]" + juizes[i].getNome());

			}
		}
		int resposta = scanner.nextInt();
		System.out.println("Juiz escolhido foi" + juizes[(resposta - 1)].getNome());
	}

	private static void realizarLutas() {
		boolean lutaEncontrada = false;
		for (int i = 0; i < lutasAgendadas.size(); i++) {
			Luta lutaAgendada = lutasAgendadas.get(i);

			if (lutaAgendada != null) {
				lutaAgendada.lutar();
				lutaEncontrada = true;
			}

		}
		if (!lutaEncontrada) {
			System.out.println("Não há lutas agendadas.");
		} else {
//			lutasAgendadas = lutasAgenda[10];
		}
	}

	private static Lutador selecionarLutador(ArrayList<Lutador> lutador) {
		int opcaoLutador;
		Lutador lutadorSelecionado = null;
		do {
			listarLutadores(lutador);

			System.out.println("De qual lutador você deseja ver os atributos?");
			opcaoLutador = scanner.nextInt();

			if (opcaoLutador >= 1 && opcaoLutador <= lutador.size()) {
				System.out.println("Você escolheu o lutador: " + lutador.get(opcaoLutador - 1).getNome());
				lutadorSelecionado = lutador.get(opcaoLutador - 1);
				break;
			} else if (opcaoLutador == (lutador.size() + 1)) {
				System.out.println("Finalizando");
			} else {
				System.out.println("Opção Inválida!!");
			}

		} while (opcaoLutador != lutador.size() + 1);
		return lutadorSelecionado;
	}
}