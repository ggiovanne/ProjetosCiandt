<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Test"/>
    <fullyQualifiedTypeName name="br.com.alura.leilao.dao.LeilaoDao"/>
    <fullyQualifiedTypeName name="org.mockito.Mock"/>
    <fullyQualifiedTypeName name="br.com.alura.leilao.service.FinalizarLeilaoService"/>
    <fullyQualifiedTypeName name="org.mockito.MockitoAnnotations"/>
    <fullyQualifiedTypeName name="br.com.alura.leilao.model.Leilao"/>
    <fullyQualifiedTypeName name="java.math.BigDecimal"/>
    <fullyQualifiedTypeName name="br.com.alura.leilao.model.Usuario"/>
    <fullyQualifiedTypeName name="br.com.alura.leilao.service.EnviadorDeEmails"/>
    <fullyQualifiedTypeName name="br.com.alura.leilao.dao.PagamentoDao"/>
    <fullyQualifiedTypeName name="br.com.alura.leilao.model.Lance"/>
    <fullyQualifiedTypeName name="org.mockito.Captor"/>
    <fullyQualifiedTypeName name="org.mockito.ArgumentCaptor"/>
    <fullyQualifiedTypeName name="br.com.alura.leilao.model.Pagamento"/>
    <fullyQualifiedTypeName name="java.time.LocalDateTime"/>
    <fullyQualifiedTypeName name="junit.framework.Assert"/>
    <fullyQualifiedTypeName name="java.time.LocalDate"/>
    <fullyQualifiedTypeName name="org.junit.Assert"/>
    <fullyQualifiedTypeName name="java.time.DayOfWeek"/>
    <fullyQualifiedTypeName name="java.time.Clock"/>
    <fullyQualifiedTypeName name="java.time.ZoneOffset"/>
    <fullyQualifiedTypeName name="java.time.Instant"/>
    <fullyQualifiedTypeName name="java.time.ZoneId"/>
    <fullyQualifiedTypeName name="org.mockito.Mockito"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="org.assertj.core.api.Assert"/>
    <fullyQualifiedTypeName name="com.ciandt.people.bootcamp.mvc.repository.LutadorRepository"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.BeforeAll"/>
    <fullyQualifiedTypeName name="lombok.Builder"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="com.people.bootcamp.repository.model.ContentsModel"/>
    <fullyQualifiedTypeName name="javax.persistence.ManyToMany"/>
    <fullyQualifiedTypeName name="org.mapstruct.factory.Mappers"/>
    <fullyQualifiedTypeName name="com.people.bootcamp.service.domain.TrailModelMapper"/>
    <fullyQualifiedTypeName name="com.people.bootcamp.controller.dto.TrailDto"/>
    <fullyQualifiedTypeName name="com.people.bootcamp.controller.dto.TrailsDto"/>
    <fullyQualifiedTypeName name="com.people.bootcamp.repository.TrailRepository"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="com.people.bootcamp.service.domain.TrailNotFoundException"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.NotNull"/>
    <fullyQualifiedTypeName name="java.io.Serializable"/>
    <fullyQualifiedTypeName name="javax.persistence.Embedded"/>
    <fullyQualifiedTypeName name="javax.persistence.EmbeddedId"/>
    <fullyQualifiedTypeName name="javax.persistence.Embeddable"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.BeforeEach"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.RequiredArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="com.people.bootcamp.service.domain.Content"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="com.people.bootcamp.service.ContentService"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="com.people.bootcamp.repository.model.TrailModel"/>
    <fullyQualifiedTypeName name="com.people.bootcamp.repository.UserContentRepository"/>
    <fullyQualifiedTypeName name="com.people.bootcamp.repository.model.UserContentModel"/>
    <fullyQualifiedTypeName name="com.people.bootcamp.repository.model.UserContentId"/>
</qualifiedTypeNameHistroy>
